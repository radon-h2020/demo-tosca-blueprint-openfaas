---
tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.docker_setup:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      linux_distro:
        type: string
        description: Name of linux distro
      linux_release:
        type: string
        description: Name of linux release
    attributes:
      linux_distro:
        type: string
      linux_release:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          linux_distro: {default: { get_property: [SELF, linux_distro] }, type: string }
          linux_release: {default: { get_property: [SELF, linux_release] }, type: string }
        operations:
          create:
            implementation: playbooks/docker/create.yml

  radon.nodes.openfaas:
    derived_from: tosca.nodes.SoftwareComponent
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          create:
            implementation: playbooks/openfaas/create.yml

  radon.nodes.minio:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      minio_ip:
        type: string
        description: IP address of the MiniIO object storage
      credentials:
        type: string
        description: MiniIO credentials
    attributes:
      minio_ip:
        type: string
      credentials:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          minio_ip: {default: { get_property: [SELF, minio_ip] }, type: string }
          credentials: {default: { get_property: [SELF, credentials] }, type: string }
        operations:
          create:
            implementation:
              primary: playbooks/minio/create.yml
              dependencies:
                - playbooks/minio/templates/config.json

topology_template:
  inputs:
    host_ip:
      type: string
    credentials:
      type: string
    linux_distro:
      type: string
    linux_release:
      type: string

  node_templates:
    my-workstation:
      type: tosca.nodes.Compute
      attributes:
        private_address: { get_input: host_ip }
        public_address: { get_input: host_ip }

    docker_setup:
      type: radon.nodes.docker_setup
      properties:
        linux_distro: { get_input: linux_distro }
        linux_release: { get_input: linux_release }
      requirements:
        - host: my-workstation

    openfaas:
      type: radon.nodes.openfaas
      requirements:
        - host: my-workstation

    minio_object_storage:
      type: radon.nodes.minio
      properties:
        minio_ip: { get_input: host_ip }
        credentials: { get_input: credentials }
      requirements:
        - host: my-workstation
...